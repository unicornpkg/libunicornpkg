---Generate a module wrapper, which is effectively a symlink for a Lua module.
---@param modulePath string "The path to the module to wrap."
---@param desiredModulePath string "A path, usually inside of /lib."
local function makeModuleWrapper(modulePath, desiredModulePath)
	if fs.exists(modulePath) and not fs.exists(desiredModulePath) then
		local desiredModulePath = fs.open(desiredModulePath, "w")
		desiredModulePath.writeLine("-- !GENERATED by makeBinWrapper")
		desiredModulePath.writeLine(string.format("shell.run('%s')", modulePath))
	else
		printError(string.format("makeBinWrapper: generating a wrapper for '%s' at '%s' failed.", modulePath, desiredModulePath))
	end
end

local tArgs = {...}

assert(type(tArgs[1]), "string")
makeBinWrapper(tArgs[1])
